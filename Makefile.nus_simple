CXX = g++
CXXFLAGS = -std=c++17 -Wall -Wextra -g
LDFLAGS = -pthread

# 目标文件
TARGET = nus_simple

# 源文件
SRCS = nus_simple.cpp

# 包含路径
INCLUDES = -I./bluez-dbus-cpp/include -I./bluez-dbus-cpp

# 库路径和库
LIBS = -L./bluez-dbus-cpp/build -lbluez-dbus-cpp -lsdbus-c++ -lsystemd -lexpat -lglib-2.0 -ldbus-1 -lpcre2-8 -lffi -lmount -lcap -lrt -lresolv -llzma -lz -lselinux

# 目标规则
all: build-static-lib $(TARGET)

$(TARGET): $(SRCS)
	$(CXX) $(CXXFLAGS) $(INCLUDES) -o $@ $^ $(LIBS) $(LDFLAGS)

# 首先编译静态库
build-static-lib:
	cd bluez-dbus-cpp && mkdir -p build && cd build && \
	cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF && \
	make -j4

# 安装 D-Bus 配置文件（需要 root 权限）
install-conf:
	sudo cp org.example.ble_uart.conf /etc/dbus-1/system.d/
	sudo systemctl reload dbus

# 安装用户级别的 systemd 服务
install-service:
	mkdir -p ~/.config/systemd/user/
	cp nus-simple.service ~/.config/systemd/user/
	systemctl --user daemon-reload
	@echo "服务已安装。使用以下命令启动服务："
	@echo "systemctl --user start nus-simple.service"
	@echo "使用以下命令设置开机自启动："
	@echo "systemctl --user enable nus-simple.service"

# 运行程序（使用 sudo 以获取足够的权限）
run:
	sudo ./$(TARGET)

clean:
	rm -f $(TARGET)
	cd bluez-dbus-cpp/build && make clean

.PHONY: all clean install-conf install-service run build-static-lib
